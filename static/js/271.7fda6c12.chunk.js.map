{"version":3,"file":"static/js/271.7fda6c12.chunk.js","mappings":"mMACA,GAAgB,SAAW,2BAA2B,QAAU,0BAA0B,UAAY,4BAA4B,aAAe,+BAA+B,aAAe,+BAA+B,WAAa,6BAA6B,eAAiB,kC,6CCiBnRA,EAAiB,WACrB,IAAMC,GAAwBC,EAAAA,EAAAA,MACxBC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAmB,OAAKA,EAAMC,KAAKH,MAAM,IASrE,OAPAI,EAAAA,EAAAA,YAAU,WAER,OADAN,GAASO,EAAAA,EAAAA,OACF,WACLP,GAASQ,EAAAA,EAAAA,KACX,CACF,GAAG,KAGD,iBAAKC,UAAWC,EAAAA,KAAY,UACd,UAAXR,GAAqB,6CAA6B,IACnD,iCACE,SAACS,EAAc,KACf,SAACC,EAAQ,SAIjB,EAEMA,EAAqBC,EAAAA,MAAW,WACpCC,QAAQC,IAAI,eACZ,IAAMC,GAAWb,EAAAA,EAAAA,KAAY,SAACC,GAAmB,OAAKA,EAAMC,KAAKW,QAAQ,IACnEC,GAAmB,OAAID,GAAUE,UAEvC,OACE,gBAAKT,UAAWC,EAAAA,SAAgB,SAC7BO,EAAiBE,KAAI,SAACC,GACrB,OAAO,SAACC,EAAO,CAAeC,MAAOF,GAAhBA,EAAKG,GAC5B,KAGN,IAEMF,EAAgDR,EAAAA,MAAW,YAAgB,IAAbS,EAAK,EAALA,MAElE,OADAR,QAAQC,IAAI,gBAEV,iBAAKN,UAAWC,EAAAA,QAAe,WAC7B,iBAAKD,UAAWC,EAAAA,WAAkB,WAChC,gBAAKD,UAAWC,EAAAA,YAAoBc,IAAKF,EAAMG,MAAQH,EAAMG,MAAQA,EAAOC,IAAI,WAChF,uBAAIJ,EAAMK,eAEZ,iBAAKlB,UAAWC,EAAAA,UAAiB,WAC/B,gBAAKD,UAAWC,EAAAA,aAAoB,UAClC,uBAAIY,EAAMM,aAEZ,gBAAKnB,UAAWC,EAAAA,oBAIxB,IAEMC,EAA+B,WACnC,OAA8BkB,EAAAA,EAAAA,UAAS,IAAG,eAAnCD,EAAO,KAAEE,EAAU,KACpB9B,GAAwBC,EAAAA,EAAAA,MACxBC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAmB,OAAKA,EAAMC,KAAKH,MAAM,IASrE,OACE,iBAAKO,UAAWC,EAAAA,eAAsB,WACpC,qBAAUqB,SAAU,SAACC,GAAC,OAAKF,EAAWE,EAAEC,cAAcC,MAAM,EAAEA,MAAON,KACrE,mBAAQO,SAAqB,UAAXjC,EAAoBkC,QAVf,WACrBR,IACF5B,GAASqC,EAAAA,EAAAA,IAAYT,IACrBE,EAAW,IAEf,EAKsE,mBAKxE,EAEA,EApF2B,WACzB,OACE,0BACE,SAAC/B,EAAI,KAGX,C","sources":["webpack://react-social-network/./src/pages/Chat/ChatPage.module.css?29d9","pages/Chat/ChatPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"ChatPage_messages__Qg2LH\",\"message\":\"ChatPage_message__42e2b\",\"textBlock\":\"ChatPage_textBlock__Slh-z\",\"header_block\":\"ChatPage_header_block__VcFu+\",\"footer_block\":\"ChatPage_footer_block__HH-tW\",\"info_block\":\"ChatPage_info_block__rSiUD\",\"addMessageForm\":\"ChatPage_addMessageForm__tlWzm\"};","import styles from './ChatPage.module.css';\r\nimport photo from '../../assets/img/avatar.jpg';\r\nimport { useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ChatMessageType } from '../../api/chat-api';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sendMessage, startMessagesListening, stoptMessagesListening } from '../../components/redux/chat-reducer';\r\nimport { AppDispatch, AppStateType } from '../../components/redux/redux-store';\r\nimport React from 'react';\r\n\r\nconst ChatPage: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Chat />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Chat: React.FC = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const status = useSelector((state: AppStateType) => state.chat.status);\r\n\r\n  useEffect(() => {\r\n    dispatch(startMessagesListening());\r\n    return () => {\r\n      dispatch(stoptMessagesListening());\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.chat}>\r\n      {status === 'error' ? <div>need to restart</div> : ''}\r\n      <>\r\n        <AddMessageForm />\r\n        <Messages />\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Messages: React.FC = React.memo(() => {\r\n  console.log('...messages');\r\n  const messages = useSelector((state: AppStateType) => state.chat.messages);\r\n  const reversedMessages = [...messages].reverse();\r\n\r\n  return (\r\n    <div className={styles.messages}>\r\n      {reversedMessages.map((item) => {\r\n        return <Message key={item.id} props={item} />;\r\n      })}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Message: React.FC<{ props: ChatMessageType }> = React.memo(({ props }) => {\r\n  console.log('one message');\r\n  return (\r\n    <div className={styles.message}>\r\n      <div className={styles.info_block}>\r\n        <img className={styles.post_avatar} src={props.photo ? props.photo : photo} alt='photo' />\r\n        <p>{props.userName}</p>\r\n      </div>\r\n      <div className={styles.textBlock}>\r\n        <div className={styles.header_block}>\r\n          <p>{props.message}</p>\r\n        </div>\r\n        <div className={styles.footer_block}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddMessageForm: React.FC<{}> = () => {\r\n  const [message, setMessage] = useState('');\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const status = useSelector((state: AppStateType) => state.chat.status);\r\n\r\n  const sendMessageHandler = () => {\r\n    if (message) {\r\n      dispatch(sendMessage(message));\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.addMessageForm}>\r\n      <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\r\n      <button disabled={status !== 'ready'} onClick={sendMessageHandler}>\r\n        add\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"names":["Chat","dispatch","useDispatch","status","useSelector","state","chat","useEffect","startMessagesListening","stoptMessagesListening","className","styles","AddMessageForm","Messages","React","console","log","messages","reversedMessages","reverse","map","item","Message","props","id","src","photo","alt","userName","message","useState","setMessage","onChange","e","currentTarget","value","disabled","onClick","sendMessage"],"sourceRoot":""}