{"version":3,"file":"static/js/271.f2ed7e8c.chunk.js","mappings":"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","sources":["webpack://react-social-network/./src/pages/Chat/ChatPage.module.css?29d9","pages/Chat/ChatPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"ChatPage_messages__Qg2LH\",\"message\":\"ChatPage_message__42e2b\",\"textBlock\":\"ChatPage_textBlock__Slh-z\",\"header_block\":\"ChatPage_header_block__VcFu+\",\"footer_block\":\"ChatPage_footer_block__HH-tW\",\"info_block\":\"ChatPage_info_block__rSiUD\",\"addMessageForm\":\"ChatPage_addMessageForm__tlWzm\"};","import styles from './ChatPage.module.css';\r\nimport photo from '../../assets/img/avatar.jpg';\r\nimport { useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ntype MessageType = { message: string; photo: string; userId: number; userName: string };\r\n\r\nconst ChatPage: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Chat />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Chat: React.FC = () => {\r\n  const [wsChanel, setWsChanel] = useState<WebSocket | null>(null);\r\n\r\n  useEffect(() => {\r\n    let ws: WebSocket;\r\n\r\n    const closeHandler = () => {\r\n      console.log('close WS');\r\n      setTimeout(createChanel, 3000);\r\n    };\r\n\r\n    function createChanel() {\r\n      ws?.removeEventListener('close', closeHandler);\r\n      ws?.close();\r\n\r\n      ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n      ws.addEventListener('close', closeHandler);\r\n      setWsChanel(ws);\r\n    }\r\n    createChanel();\r\n\r\n    return () => {\r\n      ws.removeEventListener('close', closeHandler);\r\n      ws.close();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.chat}>\r\n      <AddMessageForm wsChanel={wsChanel} />\r\n      <Messages wsChanel={wsChanel} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Messages: React.FC<{ wsChanel: WebSocket | null }> = ({ wsChanel }) => {\r\n  const [messages, setMessages] = useState<MessageType[]>([]);\r\n\r\n  useEffect(() => {\r\n    let messageHandler = (e: MessageEvent) => {\r\n      let newMessages = JSON.parse(e.data);\r\n      setMessages((prevMessages) => [...prevMessages, ...newMessages]);\r\n    };\r\n    wsChanel?.addEventListener('message', messageHandler);\r\n\r\n    return () => {\r\n      wsChanel?.removeEventListener('message', messageHandler);\r\n    };\r\n  }, [wsChanel]);\r\n\r\n  return (\r\n    <div className={styles.messages}>\r\n      {[...messages].reverse().map((item) => {\r\n        return <Message key={uuidv4()} props={item} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Message: React.FC<{ props: MessageType }> = ({ props }) => {\r\n  return (\r\n    <div className={styles.message}>\r\n      <div className={styles.info_block}>\r\n        <img className={styles.post_avatar} src={props.photo ? props.photo : photo} alt='photo' />\r\n        <p>{props.userName}</p>\r\n        {/* <p>{message.userId}</p> */}\r\n      </div>\r\n\r\n      <div className={styles.textBlock}>\r\n        <div className={styles.header_block}>\r\n          <p>{props.message}</p>\r\n        </div>\r\n        <div className={styles.footer_block}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm: React.FC<{ wsChanel: WebSocket | null }> = ({ wsChanel }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [readyStatus, setReadyStatus] = useState<'pending' | 'ready'>('pending');\r\n\r\n  useEffect(() => {\r\n    let openHandler = () => {\r\n      setReadyStatus('ready');\r\n    };\r\n\r\n    wsChanel?.addEventListener('open', openHandler);\r\n    return () => {\r\n      wsChanel?.removeEventListener('open', openHandler);\r\n    };\r\n  }, [wsChanel]);\r\n\r\n  const sendMessage = () => {\r\n    if (message) {\r\n      wsChanel?.send(message);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.addMessageForm}>\r\n      <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\r\n      <button disabled={wsChanel === null || readyStatus !== 'ready'} onClick={sendMessage}>\r\n        add\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"names":["Chat","useState","wsChanel","setWsChanel","useEffect","ws","closeHandler","console","log","setTimeout","createChanel","removeEventListener","close","WebSocket","addEventListener","className","styles","AddMessageForm","Messages","messages","setMessages","messageHandler","e","newMessages","JSON","parse","data","prevMessages","reverse","map","item","Message","props","uuidv4","src","photo","alt","userName","message","setMessage","readyStatus","setReadyStatus","openHandler","onChange","currentTarget","value","disabled","onClick","send"],"sourceRoot":""}