{"version":3,"file":"static/js/271.875905f0.chunk.js","mappings":"mMACA,GAAgB,QAAU,0BAA0B,UAAY,4BAA4B,aAAe,+BAA+B,aAAe,+BAA+B,WAAa,8B,oCCG/LA,EAAW,IAAIC,UAAU,gEAYzBC,EAAiB,WACrB,OACE,iBAAKC,UAAWC,EAAAA,KAAY,WAC1B,SAACC,EAAc,KACf,SAACC,EAAQ,MAGf,EAEMA,EAAqB,WACzB,OAAgCC,EAAAA,EAAAA,UAAwB,IAAG,eAApDC,EAAQ,KAAEC,EAAW,KAS5B,OAPAC,EAAAA,EAAAA,YAAU,WACRV,EAASW,iBAAiB,WAAW,SAACC,GACpC,IAAIC,EAAcC,KAAKC,MAAMH,EAAEI,MAC/BP,GAAY,SAACQ,GAAY,wBAASA,IAAY,OAAKJ,GAAW,GAChE,GACF,GAAG,KAGD,gBAAKV,UAAWC,EAAAA,SAAgB,UAC7B,OAAII,GAAUU,UAAUC,KAAI,SAACC,GAC5B,OAAO,SAACC,EAAO,CAAgBC,MAAOF,IAAjBG,EAAAA,EAAAA,KACvB,KAGN,EAEMF,EAA4C,SAAH,GAAmB,IAAbC,EAAK,EAALA,MACnD,OACE,iBAAKnB,UAAWC,EAAAA,QAAe,WAC7B,iBAAKD,UAAWC,EAAAA,WAAkB,WAChC,gBAAKD,UAAWC,EAAAA,YAAoBoB,IAAKF,EAAMG,MAAQH,EAAMG,MAAQA,EAAOC,IAAI,WAChF,uBAAIJ,EAAMK,eAIZ,iBAAKxB,UAAWC,EAAAA,UAAiB,WAC/B,gBAAKD,UAAWC,EAAAA,aAAoB,UAClC,uBAAIkB,EAAMM,aAEZ,gBAAKzB,UAAWC,EAAAA,oBAIxB,EAEMC,EAA2B,WAC/B,OAA8BE,EAAAA,EAAAA,UAAS,IAAG,eAAnCqB,EAAO,KAAEC,EAAU,KAO1B,OACE,iBAAK1B,UAAU,iBAAgB,WAC7B,qBAAU2B,SAAU,SAAClB,GAAC,OAAKiB,EAAWjB,EAAEmB,cAAcC,MAAM,EAAEA,MAAOJ,KACrE,mBAAQK,QATQ,WACdL,IACF5B,EAASkC,KAAKN,GACdC,EAAW,IAEf,EAIiC,mBAGnC,EAEA,EAvE2B,WACzB,OACE,0BACE,SAAC3B,EAAI,KAGX,C","sources":["webpack://react-social-network/./src/pages/Chat/ChatPage.module.css?29d9","pages/Chat/ChatPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"message\":\"ChatPage_message__42e2b\",\"textBlock\":\"ChatPage_textBlock__Slh-z\",\"header_block\":\"ChatPage_header_block__VcFu+\",\"footer_block\":\"ChatPage_footer_block__HH-tW\",\"info_block\":\"ChatPage_info_block__rSiUD\"};","import styles from './ChatPage.module.css';\r\nimport photo from '../../assets/img/avatar.jpg';\r\nimport { useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nconst wsChanel = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n\r\ntype MessageType = { message: string; photo: string; userId: number; userName: string };\r\n\r\nconst ChatPage: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Chat />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Chat: React.FC = () => {\r\n  return (\r\n    <div className={styles.chat}>\r\n      <AddMessageForm />\r\n      <Messages />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Messages: React.FC = () => {\r\n  const [messages, setMessages] = useState<MessageType[]>([]);\r\n\r\n  useEffect(() => {\r\n    wsChanel.addEventListener('message', (e) => {\r\n      let newMessages = JSON.parse(e.data);\r\n      setMessages((prevMessages) => [...prevMessages, ...newMessages]);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.messages}>\r\n      {[...messages].reverse().map((item) => {\r\n        return <Message key={uuidv4()} props={item} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Message: React.FC<{ props: MessageType }> = ({ props }) => {\r\n  return (\r\n    <div className={styles.message}>\r\n      <div className={styles.info_block}>\r\n        <img className={styles.post_avatar} src={props.photo ? props.photo : photo} alt='photo' />\r\n        <p>{props.userName}</p>\r\n        {/* <p>{message.userId}</p> */}\r\n      </div>\r\n\r\n      <div className={styles.textBlock}>\r\n        <div className={styles.header_block}>\r\n          <p>{props.message}</p>\r\n        </div>\r\n        <div className={styles.footer_block}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm: React.FC = () => {\r\n  const [message, setMessage] = useState('');\r\n  const sendMessage = () => {\r\n    if (message) {\r\n      wsChanel.send(message);\r\n      setMessage('');\r\n    }\r\n  };\r\n  return (\r\n    <div className='AddMessageForm'>\r\n      <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\r\n      <button onClick={sendMessage}>add</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"names":["wsChanel","WebSocket","Chat","className","styles","AddMessageForm","Messages","useState","messages","setMessages","useEffect","addEventListener","e","newMessages","JSON","parse","data","prevMessages","reverse","map","item","Message","props","uuidv4","src","photo","alt","userName","message","setMessage","onChange","currentTarget","value","onClick","send"],"sourceRoot":""}